apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "at.stefanirndorfer.spreadit"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"

    implementation "com.android.support.constraint:constraint-layout:$rootProject.constraintLayoutVersion"
    implementation "com.android.support:design:$rootProject.supportLibraryVersion"

    // rx
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxAndroidVersion"
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.rxJavaVersion"

    // RxLifecycle
    implementation"com.trello.rxlifecycle2:rxlifecycle-android:$rootProject.rxLifecycleVersion"

    // guava
    implementation "com.google.guava:guava:$rootProject.guavaVersion"

    //auto-value
    implementation "com.google.auto.value:auto-value:$rootProject.autoValueVersion"
    annotationProcessor "com.google.auto.value:auto-value:$rootProject.autoValueVersion"

    //auto-value parcel
    implementation "com.ryanharter.auto.value:auto-value-parcel-adapter:$rootProject.autoValueParcelAdapterVersion"
    annotationProcessor "com.ryanharter.auto.value:auto-value-parcel:$rootProject.autoValueParcelAdapterVersion"

    //auto-value-moshi
    annotationProcessor "com.ryanharter.auto.value:auto-value-moshi:$rootProject.autoValueMoshiVersion"
    implementation "com.ryanharter.auto.value:auto-value-moshi-annotations:$rootProject.autoValueMoshiVersion"

    //autovalue gson
    implementation "com.ryanharter.auto.value:auto-value-gson:$rootProject.autoValueGsonVersion"
    annotationProcessor "com.ryanharter.auto.value:auto-value-gson:$rootProject.autoValueGsonVersion"

    // timber
    implementation "com.jakewharton.timber:timber:$rootProject.timberVersion"

    // picasso
    implementation "com.squareup.picasso:picasso:$rootProject.picassoVersion"
    implementation "com.jakewharton.picasso:picasso2-okhttp3-downloader:$rootProject.picassoDownloaderVersion"

    // butter knife
    implementation "com.jakewharton:butterknife:$rootProject.butterKnifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.butterKnifeVersion"

    //retrofit
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$rootProject.retrofitVersion"

    //gson
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.gsonVersion"

    // Architecture Components
    // live data
    implementation "android.arch.lifecycle:common-java8:$rootProject.archLifecycleVersion"
    // optional - ReactiveStreams support for LiveData
    implementation "android.arch.lifecycle:reactivestreams:$rootProject.archLifecycleVersion"
    implementation "android.arch.lifecycle:extensions:$rootProject.archLifecycleVersion"
    annotationProcessor "android.arch.lifecycle:compiler:$rootProject.archLifecycleVersion"

    testImplementation "junit:junit:$rootProject.junitVersion"
    androidTestImplementation "junit:junit:$rootProject.junitVersion"
    androidTestImplementation "com.android.support.test:runner:$rootProject.runnerVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion"
}
